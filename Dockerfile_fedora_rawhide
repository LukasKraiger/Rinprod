FROM fedora:rawhide

USER root

RUN dnf update -y \
    && dnf -y upgrade \
    && dnf -y install git wget passwd cmake dnf-plugins-core which \
    && dnf builddep R -y

RUN curl -O https://cran.r-project.org/src/base/R-4/R-4.2.2.tar.gz \
&& tar -xzvf R-4.2.2.tar.gz \
&& cd R-4.2.2 \ 
&& ./configure --prefix=/opt/R/R-4.2.2 --enable-R-shlib --enable-memory-profiling

RUN cd R-4.2.2 \
    && make \
    && make install \
    && ls 
RUN ln -s /opt/R/R-4.2.2/bin/R /usr/local/bin/R \
    && ln -s /opt/R/R-4.2.2/bin/Rscript /usr/local/bin/Rscript




RUN dnf update -y \
    && dnf -y install harfbuzz-devel fribidi-devel openssl-devel libuuid libuuid-devel libcurl-devel \
    && dnf -y install freetype-devel libpng-devel libtiff-devel libjpeg-turbo-devel
 

RUN dnf update -y \
    && dnf -y install harfbuzz-devel fribidi-devel openssl-devel libuuid libuuid-devel libcurl-devel \
    && dnf -y install freetype-devel libpng-devel libtiff-devel libjpeg-turbo-devel
 
RUN echo "options(Ncpus = 6)" >> .Rprofile
 
RUN R -e "if (!library(devtools, logical.return=T)) install.packages('devtools', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(tidyverse, logical.return=T)) install.packages('tidyverse', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(sjlabelled, logical.return=T)) install.packages('sjlabelled', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(haven, logical.return=T)) install.packages('haven', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(magrittr, logical.return=T)) install.packages('magrittr', dependencies=TRUE, repos='https://cran.wu.ac.at/') "
RUN R -e "if (!library(dplyr, logical.return=T)) install.packages('dplyr', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(psych, logical.return=T)) install.packages('psych', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(knitr, logical.return=T)) install.packages('knitr', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(ggthemes, logical.return=T)) install.packages('ggthemes', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
#https://stackoverflow.com/questions/45289764/install-r-packages-using-docker-file
#http://www.sthda.com/english/wiki/one-way-anova-test-in-r
RUN R -e "if (!library(apa, logical.return=T)) install.packages('apa', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(jtools, logical.return=T)) install.packages('jtools', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(car, logical.return=T)) install.packages('car', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
RUN R -e "if (!library(ggpubr, logical.return=T)) install.packages('ggpubr', dependencies=TRUE, repos='https://cran.wu.ac.at/')"
 
RUN R -e "if (!library(devtools, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(tidyverse, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(sjlabelled, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(haven, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(magrittr, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(dplyr, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(psych, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(knitr, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(ggthemes, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(apa, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(jtools, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(car, logical.return=T)) quit(status=10)"
RUN R -e "if (!library(ggpubr, logical.return=T)) quit(status=10)"
 
RUN R -e "devtools::install_github('LukasKraiger/frame')"

RUN R -e "devtools::install_github('LukasKraiger/R_Renderengine/rendengine')"



## create directories
RUN mkdir -p /01_data
RUN mkdir -p /02_code
RUN mkdir -p /03_output
 

RUN cd /02_code

RUN R -e "rendengine::Renderengine(".", 6)"

#ENTRYPOINT usr/lib/rstudio-server/bin/rserver --www-port=8888  --server-daemonize=0 && /bin/bash 
#https://forums.docker.com/t/how-to-run-bash-command-after-startup/21631 